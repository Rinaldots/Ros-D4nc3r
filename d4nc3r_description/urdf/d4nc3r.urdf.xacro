<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="d4nc3r">

  <xacro:property name="package_name" value="d4nc3r_description"/>
  <xacro:property name="robot_name" value="d4nc3r"/> <!-- Used for mesh paths, should remain 'd4nc3r' -->

  <xacro:arg name="frame_prefix_arg" default="0"/> <!-- Argument from launch file for prefixing -->

  <xacro:property name="processed_prefix" value="$(arg frame_prefix_arg)_" /> <!-- Prefix with underscore otherwise -->

  <xacro:include filename="$(find ${package_name})/urdf/include/common_macros.urdf.xacro" />
  <xacro:include filename="$(find ${package_name})/urdf/include/d4nc3r_caster_macro.urdf.xacro" />

  <xacro:arg name="yaml_config_dir" default="$(find ${package_name})/config/${robot_name}" />

  <xacro:property name="caster_wheel_yaml" value="$(arg yaml_config_dir)/caster_wheel.yaml" />
  <xacro:property name="caster_wheel_props" value="${xacro.load_yaml(caster_wheel_yaml)}"/>
  <xacro:arg name="use_fixed_caster" default="True"/>

  <xacro:property name="wheel_yaml" value="$(arg yaml_config_dir)/wheel.yaml" />
  <xacro:property name="wheel_props" value="${xacro.load_yaml(wheel_yaml)}"/>

  <xacro:property name="motor_yaml" value="$(arg yaml_config_dir)/motor.yaml" />
  <xacro:property name="motor_props" value="${xacro.load_yaml(motor_yaml)}"/>

  <xacro:property name="base_yaml" value="$(arg yaml_config_dir)/base.yaml" />
  <xacro:property name="base_props" value="${xacro.load_yaml(base_yaml)}"/>

  <xacro:property name="second_base_yaml" value="$(arg yaml_config_dir)/second_base.yaml" />
  <xacro:property name="second_base_props" value="${xacro.load_yaml(second_base_yaml)}"/>



  <!-- Footprint link -->
  <xacro:footprint robot_prefix="${processed_prefix}"
                   wheel_props="${wheel_props}" />

  <!-- Base link -->
  <xacro:base robot_prefix="${processed_prefix}"
              link_name="base_link" base_prop="${base_props}" mesh="${base_props['base']['mesh']}" >
    <origin xyz="0 0 0" rpy="0 0 0" />
  </xacro:base>

  <!-- Second story link -->
  <xacro:base robot_prefix="${processed_prefix}"
              link_name="second_base_link" base_prop="${second_base_props}" mesh="${second_base_props['base']['mesh']}" >
    <origin xyz="0 0 0.001" rpy="0 0 0" />
  </xacro:base>

  <!-- Joint to connect second_story with base_link -->
  <joint name="${processed_prefix}second_base_joint" type="fixed">
    <parent link="${processed_prefix}base_link"/>
    <child link="${processed_prefix}second_base_link" />
    <origin xyz="0 0 0" rpy="0 0 0" />
  </joint>

  <!-- Caster Wheel -->
  <xacro:caster_wheel robot_prefix="${processed_prefix}"
                      reflect="-1"
                      use_fixed="$(arg use_fixed_caster)"
                      wheel_props="${caster_wheel_props}">
  </xacro:caster_wheel>

  <!-- Wheels -->
  <xacro:wheel robot_prefix="${processed_prefix}"
               prefix="right" reflect="-1"
                      wheel_props="${wheel_props}"
                      base_props="${base_props}" />
  <xacro:wheel robot_prefix="${processed_prefix}"
               prefix="left" reflect="1"
                      wheel_props="${wheel_props}"
                      base_props="${base_props}" />


  <!-- Motors -->
  <xacro:motor robot_prefix="${processed_prefix}"
               prefix="right" reflect="-1"
                      motor_props="${motor_props}"
                      base_props="${base_props}" >
  </xacro:motor>

  <xacro:motor robot_prefix="${processed_prefix}"
               prefix="left" reflect="1"
                      motor_props="${motor_props}"
                      base_props="${base_props}" >
  </xacro:motor>

  <!-- Odometria link -->
  <link name="${processed_prefix}odom_link"/>
  <joint name="${processed_prefix}odom_joint" type="fixed">
    <parent link="${processed_prefix}base_link"/>
    <child link="${processed_prefix}odom_link"/>
    <origin xyz="0 0 0" rpy="0 0 3.1416"/>
  </joint>

  <!-- MPU link -->
  <link name="${processed_prefix}mpu_link"/>
  <joint name="${processed_prefix}mpu_joint" type="fixed">
    <parent link="${processed_prefix}base_link"/>
    <child link="${processed_prefix}mpu_link"/>
    <origin xyz="-0.033 -0.010 0.02" rpy="3.1416 0 0"/> <!-- Corrija a orientação aqui -->
  </joint>


    <ros2_control name="D4nc3rRealHardware" type="system">
    <hardware>
      <plugin>d4nc3r_control/D4nc3rHardwareInterface</plugin>
      <param name="encoder_topic_name">/d4nc3r1/encoders</param>
      <param name="ticks_per_wheel_revolution">16.0</param>
      <param name="left_encoder_data_index">1</param>
      <param name="right_encoder_data_index">0</param>
    </hardware>
    <joint name="${processed_prefix}left_wheel_joint"> <!-- No type attribute here - correct -->
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
    <joint name="${processed_prefix}right_wheel_joint"> <!-- No type attribute here - correct -->
      <command_interface name="velocity"/>
      <state_interface name="position"/>
      <state_interface name="velocity"/>
    </joint>
  </ros2_control>


</robot>
