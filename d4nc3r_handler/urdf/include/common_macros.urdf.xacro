<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">


<!-- ===================== Wheel xacro =========================================

  params:
  - prefix [string]: used to diferentiate the link and joint name;
  - reflect [1/-1]: value to set the side of the wheel;
  - wheel_props [dictionary]: wheel properties;
  - base_props [dictionary]: base link properties;
  - mesh [string]: file name of the wheel mesh;
    - DEFAULT Value -> Empty string
-->
  <xacro:macro name="wheel"
               params="prefix reflect wheel_props base_props ">

  <xacro:property name="pos_x_joint"
     value="${(base_props['base']['x_size']/2) - wheel_props['x_offset']}"/>
  <xacro:property name="pos_y_joint"
    value="${(base_props['base']['y_size']/2) + wheel_props['y_offset'] + (wheel_props['length']/2)}"/>
  <xacro:property name="pos_z_joint" value="${wheel_props['z_offset']}"/>

    <link name="${prefix}_wheel">
    <xacro:if value="${wheel_props['mesh'] != '' }" >
      <visual>
        <origin xyz="0.0 0 0" rpy="${pi/2} 0 ${pi/2.0*(reflect - 1)}"/>
        <geometry>
          <xacro:if value="${wheel_props['scale'] == '' }" >
            <mesh filename="package://d4nc3r_description/meshes/${robot_name}/${wheel_props['mesh']}" />
          </xacro:if>
          <xacro:unless value="${wheel_props['scale'] == '' }" >
            <mesh filename="package://d4nc3r_description/meshes/${robot_name}/${wheel_props['mesh']}" scale="${wheel_props['scale']}" />
          </xacro:unless>
        </geometry>
        <material name="dark_grey"/>
      </visual>
    </xacro:if>
    <xacro:if value="${wheel_props['mesh'] == '' }" >
      <visual>
        <origin xyz="0.0 0 0" rpy="${pi/2} 0 0"/>
         <geometry>
         <cylinder radius="${wheel_props['radius']}" length="${wheel_props['length']}"/>
        </geometry>
        <material name="red"/>
      </visual>
    </xacro:if>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_props['radius']}" length="${wheel_props['length']}"/>
        </geometry>
      </collision>
    </link>


    <joint name="${prefix}_wheel_joint" type="continuous">
      <axis xyz="0 1 0" rpy="0 0 0" />
      <parent link="base_link"/>
      <child link="${prefix}_wheel"/>
      <origin xyz="${pos_x_joint} ${reflect* pos_y_joint} ${pos_z_joint}" rpy="0 0 0"/>
      <dynamics damping="0.01" friction="0.0"/>
    </joint>

  </xacro:macro>

<!-- ===================== Motor xacro =========================================

  params:
  - prefix [string]: used to diferentiate the link and joint name;
  - reflect [1/-1]: value to set the side of the motor;
  - motor_props [dictionary]: motor properties;
  - base_props [dictionary]: base link properties;
  - mesh [string]: file name of the motor mesh;
    - DEFAULT Value -> Empty string
-->
  <xacro:macro name="motor"
               params="prefix reflect motor_props base_props ">

  <xacro:property name="pos_x_joint"
     value="${(base_props['base']['x_size']/2) - motor_props['x_offset']}"/>
  <xacro:property name="pos_y_joint"
    value="${(base_props['base']['y_size']/2) + motor_props['y_offset'] + (motor_props['y_size']/2)}"/>
  <xacro:property name="pos_z_joint" value="${motor_props['z_offset']}"/>

    <link name="${prefix}_motor">
    <xacro:if value="${motor_props['mesh'] != '' }" >
      <visual>
        <origin xyz="0.0 0.0 0.0" rpy="0.0 0 ${pi/2.0*(reflect - 1)}"/>
        <geometry>
          <xacro:if value="${motor_props['scale'] == '' }" >
            <mesh filename="package://d4nc3r_description/meshes/${robot_name}/${motor_props['mesh']}" />
          </xacro:if>
          <xacro:if value="${motor_props['scale'] != '' }" >
            <mesh filename="package://d4nc3r_description/meshes/${robot_name}/${motor_props['mesh']}" scale="${motor_props['scale']}"/>
          </xacro:if>
        </geometry>
        <material name="light_blue"/>
      </visual>
    </xacro:if>
    <xacro:if value="${motor_props['mesh'] == '' }" >
      <visual>
        <origin xyz="0.0 0 0" rpy="${pi/2} 0 0"/>
         <geometry>
          <box size="${motor_props['x_size']} ${motor_props['y_size']} ${motor_props['z_size']}"/>
        </geometry>
        <material name="red"/>
      </visual>
    </xacro:if>
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <box size="${motor_props['x_size']} ${motor_props['y_size']} ${motor_props['z_size']}"/>
        </geometry>
      </collision>
    </link>

    <joint name="${prefix}_motor_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_motor"/>
      <origin xyz="${pos_x_joint} ${reflect* pos_y_joint} ${pos_z_joint}" rpy="0 ${-pi/2.0*(reflect - 1)} 0"/>
      <axis xyz="0 1 0" rpy="0 0 0" />
    </joint>

  </xacro:macro>

<!-- ===================== Base xacro ==========================================

  params:
  - link_name [string]: link name;
  - base_props [dictionary]: base link properties;
  - mesh [string]: file name of the link mesh;
    - DEFAULT Value -> Empty string
  - origin [block]: origin, position and orientation of the link;
-->
  <xacro:macro name="base"
               params="link_name:='base_link' base_prop mesh:='' scale:='' *origin ">
    <link name="${link_name}">
    <xacro:if value="${mesh != '' }" >
      <visual>
        <xacro:insert_block name="origin" />
        <geometry>
          <!-- The folder path get a folder_name global parameter -->
          <xacro:if value="${scale != '' }" >
            <mesh filename="package://d4nc3r_description/meshes/${robot_name}/${mesh}" scale="${scale}"/>
          </xacro:if>
          <xacro:if value="${scale == '' }" >
            <mesh filename="package://d4nc3r_description/meshes/${robot_name}/${mesh}" />
          </xacro:if>
        </geometry>
        <material name="blue" />
      </visual>
    </xacro:if>
    <xacro:if value="${mesh == '' }" >
      <visual>
        <xacro:insert_block name="origin" />
        <geometry>
          <cylinder radius="${base_prop['base']['diameter']}" length="${base_prop['base']['height']}"/>
        </geometry>
        <material name="blue" />
      </visual>
    </xacro:if>
    <collision>
      <origin xyz="0.0 0.0 0.042" rpy="0.0 0.0 0.0"/>
      <geometry>
        <cylinder radius="${base_prop['base']['diameter']}" length="${base_prop['base']['height']}"/>
      </geometry>
    </collision>
    </link>
  </xacro:macro>

<!-- ===================== Footprint xacro ==========================================

  params:
  - base_props [dictionary]: base link properties;
  - mesh [string]: file name of the link mesh;
    - DEFAULT Value -> Empty string
  - origin [block]: origin, position and orientation of the link;
-->
  <xacro:macro name="footprint"
               params="wheel_props">
    <!-- Base-Footprint -->
    <!-- base_footprint is a fictitious link(frame) that is on the ground right below base_link origin -->
    <link name="base_footprint" />

    <!-- Joint to connect base_footprint with base_link -->
    <joint name="base_footprint_joint" type="fixed">
      <parent link="base_link"/>
      <child link="base_footprint" />
      <origin xyz="0 0 ${-(wheel_props['radius'] - wheel_props['z_offset'])}" rpy="0 0 0" />
    </joint>
  </xacro:macro>